/*
 * Делегирование событий
 * - общий слушатель
 * - фильтр цели клика
 */

// Патерн, прием в програмировании, которое называется "Делегирование событий" - используется в том случае, когда 
// есть однотипная коллекция элементов и нам необходимо обработать какое - то одно событие для всех элементов одинаково.К примеру
// у нас есть группа кнопок и мы хотим обработать клик на каждую из этих кнопок. Самый неоптимальный вариант, это повесить
// на каждую из кнопок свой слушатель событий. Оптимальнее же повесить слушатель событий на родителя, в который помещена
// группа(коллекция) этих однотипных элементов это и называется делегирование событий на общего для коллекции родителя.


const container = document.querySelector('.js-container');

container.addEventListener('click', onClick);


// Если мы кликнем по самому контейнеру(div), то мы получем весь его текстовый контент.Свойство textContent возвращает
// весь текстовый контент без тега.Соответсвенно мы хотим как то фильтровать и получать только клики на кнопки.Вариантов
// реализации несколько.У каждого элемента есть такое свойство nodeName.

function onClick(evt) {
// console.log(evt.target.nodeName); - если мы кликнем на кнопку или контейнер, то в консоль выведется название того элемента
// на которое мы кликаем, т.е. "BUTTON" или "DIV"
// Поэтому чтобы наш клик(событие), срабатывало только при клике на кнопки, мы пропишем условие, в котором скажем, что если
// целевой элемент на котором происходит событие(клик) не КНОПКА, то игнорируем и выходим из функции. НО если мы кликаем по 
// кнопке, то условие ниже if выполняется. Это условие называется фильтр цели (делегации клика)  
  if (evt.target.nodeName !== 'BUTTON') {
    return;
  }
 console.log(evt.target); // В родителе через целевой элемент мы можем получить ссылку на тот элемент на который кликнули 
 console.log(evt.target.textContent); // также мы можем узнать текстовый котент того элемента на который произошел клик
}

// Плюс такого подхода, в том что мы экономим оперативку и мы не привязываемся к кол - ву кнопок(элементов) у родителя.Сколько
// бы мы не добавляли, событие распространится на всю коллекцию. 


/*
 * Код добавления кнопок
 */
const addBtn = document.querySelector('.js-add-btn');
let labelCounter = 6;

addBtn.addEventListener('click', onAddBtnClick);

function onAddBtnClick() {
  const btn = document.createElement('button');
  btn.textContent = `Кнопка ${labelCounter}`;
  btn.type = 'button';

  container.appendChild(btn);
  labelCounter += 1;
}
